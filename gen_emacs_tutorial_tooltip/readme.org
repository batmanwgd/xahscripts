# -*- coding: utf-8; mode: org -*-

2020-04-22

the task is to generate a list of all elisp function names, command names,
and variable names, and generate their doc string into a text file.

the purpose of this task is so that on my emacs website, we can have a 
popup tooltip when user hover the mouse over a function name to see its doc string.
The JavaScript for this is already done. We just need to gen the doc string as data.

The task is divided into 2 tasks.

1, generate all builtin lisp symbols. (whether they are function, command,
variable, or macro, or special forms, etc, we need to decide.)

2, given a lisp symbol, how to get their doc string.

For the task of listing all builtin symbols, there are few approaches,
or a combination of the following.

1, grep emacs and elisp manual.
2, grep my emacs n elisp tutorial.
3, use elisp code in emacs itself, list all available symbols.

It seems, each of these by itself is inadequate. e.g. if you grep manual,
some commonly used symbols do not show up. if you use elisp to list available
symbols itself, you get tons of symbols that are irrelevant and internal,
also, some common function or variable also do not show up, because they
haven't been loaded yet.

The problem of getting doc string is also a bit complex. If you simply
call describe-function, you get lots extraneous info, such as keybinding
user may have defined, or the docstring changes depends on what packages
you have loaded. If you call describe-variable, some variable has big chunck
value such as keymap that we don't want. The describe-function code is
very complex. It is ideal to study the code and understand and extract
essential functions to get the doc string we want.


HH==================================================================== 

2017-05-31

in my tutorial pages 
code.elisp-ƒ 
var.elisp 
<code class="elisp_f_3d841">dired-do-query-replace-regexp</code>

.elisp-prefix-command,
.elisp-command,
.elisp-macro,
.elisp-special-form,
.elisp-function

.elisp-constant,
.elisp-user-option,
.elisp-variable



2017-05-16

sample bad pages, pages where common commands has no popup
dired-do-query-replace-regexp
toggle-case-fold-search 
at
http://ergoemacs.org/emacs/emacs_find_replace.html

list-bookmark
org-time-stamp
at
http://ergoemacs.org/emacs/emacs_keybinding_overview.html

2017-05-31

link to my emacs/elisp manual

GNU Emacs Lisp Reference Manual: Character Motion
http://ergoemacs.org/emacs_manual/elisp/Character-Motion.html#Character-Motio

2017-01-13

in a prestine emacs elisp manual (as of 2017-05-30), each symbol entry has a indicator on what “type” the symbol is.
for example,

-- Command: find-file filename &optional wildcards

see https://www.gnu.org/software/emacs/manual/html_node/elisp/Visiting-Functions.html

See also: 
• Meaning of Lisp List, Function Type, and Syntax Coloring
http://ergoemacs.org/misc/elisp_list_function_type_syntax_coloring.html

We grep those, and here's result

• elisp_manual_all_symbols_2017-01-13.txt

this result, we process it, clean it up, separate into categories, and we have:

• elisp_special_form_2016-12-21
• elisp_macro_2016-12-21
• elisp_command_2016-12-21
• elisp_function_2016-12-21

• elisp_constant_2016-12-21
• elisp_user_option_2016-12-21
• elisp_var_2016-12-21

We replace the <strong> markup in elisp manual by appropriate tags, using this script:

• elisp_doc_markup_fix.el

the result is that, elisp manual now has these markup:

<code class="elisp-special-form">
<code class="elisp-macro">
<code class="elisp-command">
<code class="elisp-prefix-command">
<code class="elisp-function">
<var class="elisp-user-option">
<var class="elisp-variable">
<var class="elisp-constant">

--------------------------------------------------

now in emacs manual, there's markup with “code” tag and “var” tag like these:

<code>set-mark-command</code>
<code>term-color-green</code>
<code>C-M-a</code>
<var>dir-or-pattern</var>
<var>dirname</var>
variable <var>scroll-margin</var>

e.g. 
• https://www.gnu.org/software/emacs/manual/html_node/emacs/Setting-Mark.html

note: not all inner text are functions or variables.

here's grep result of “code” tag markup in emacs manual:

we use this script
• process_emacs_manual_pages_2017-01-08.el
to process the emacs manual pages, so that

for any <code>‹word›</code>
 if ‹word› is fboundp, replace it with <code class="elisp-ƒ">‹word›</code>,
 if ‹word› is boundp, replace it with <var class="elisp">‹word›</var>

so we have now this markup:

<code class="elisp-ƒ">symbol</code>
<var class="elisp">symbol</var>

• emacs_manual_fboundp_2017-01-08

here's a sample page of processed result:

• GNU Emacs Manual: Setting Mark
http://ergoemacs.org/emacs_manual/emacs/Setting-Mark.html

--------------------------------------------------

Generting tooltip content of elisp symbols doc string

• generate-elisp-function-doc-good_2016-12-21.el
• generate-elisp-function-doc_good_2017-01-06.el
• generate-elisp-function-doc.el

emacs_tooltip-chose.js

-----------------------------------------

redo_all_emacs_website_htmlize_2017-01-10.el

now need to do:

• add tooltips for variables to emacs tutorial

• add all commands in emacs manual to xah elisp mode. after this, redo syntax coloring on xah site elisp code.
